#!/bin/bash
set -u
set -e
NAME="ubuntu_lts_post_install"
VERSION="14.04"
DESCRIPTION="Ubuntu $VERSION LTS configuration"
GITHUB="https://github.com/vonbrownie"
SOURCE="${GITHUB}/linux-post-install/blob/master/ubuntu_lts_post_install"

# LICENSE
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License (GPLv2) published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.

penguinista() {
cat << _EOF_

(O<
(/)_
_EOF_
}

available_options() {
cat << _EOF_

OPTIONS
  -h    print command syntax and options

_EOF_
}

long_description() {
clear
cat << _EOF_

$( penguinista ) .: $NAME -- $DESCRIPTION :.

SYNOPSIS
  $NAME [OPTION] [PKGLIST]

Howdy! Ideally this script is run following a fresh installation of the
Ubuntu $VERSION LTS release.

Config files will be modified + extra apps suitable for a desktop environment
will be installed. Opening and inspecting this script in a text editor before
running is strongly encouraged.
_EOF_
available_options
}

run_options() {
while getopts ":h" OPT
do
    case $OPT in
        h)
            long_description
            exit
            ;;
        *)
            printf "\n$( penguinista ) .: Invalid option '-$OPTARG'\n"
            available_options
            exit 1
            ;;
    esac
done
}

invalid_reply() {
printf "\n'$REPLY' is invalid input...\n"
}

invalid_reply_yn() {
printf "\n'$REPLY' is invalid input. Please select 'Y(es)' or 'N(o)'...\n"
}

confirm_start() {
while :
do
    read -n 1 -p "Run script now? [yN] > "
    if [[ $REPLY == [yY] ]]
    then
        printf "\nLet's roll then ...\n"
        sleep 4
        break
    elif [[ $REPLY == [nN] || $REPLY == "" ]]
    then
        penguinista
        exit
    else
        invalid_reply_yn
    fi
done
}

test_root() {
if [[ $UID -ne 0 ]]
then
    printf "\n$( penguinista ) .: $NAME requires ROOT privileges to do its job.\n"
    exit 1
fi
}

interface_found() {
ip link | awk '/mtu/ {gsub(":",""); printf "\t%s", $2} END {printf "\n"}'
}

test_connect() {
if ! $(ip addr show | grep "state UP" &>/dev/null)
then
    printf "\n$( penguinista ) .: $NAME requires an active network interface."
    printf "\nINTERFACES FOUND\n"
    interface_found
    exit 1
fi
}

test_condition() {
test_root
test_connect
}

apt_source() {
apt-get update
}

pkg_console() {
local CONSOLE
CONSOLE="htop lxsplit par2 p7zip-full unrar sl tmux whois"
clear
apt-get install -y $CONSOLE
}

pkg_desktop() {
local GRAPHICS
GRAPHICS="gimp gimp-data-extras gimp-help-en imagemagick"
local BROWSER
BROWSER="icedtea-7-plugin openjdk-7-jre"
local VIDEO
VIDEO="vlc"
local VIEWERS
VIEWERS="qpdfview"
local EXTRAS
EXTRAS="ubuntu-restricted-extras unity-tweak-tool"
clear
while :
do
cat << _EOF_
A selection of extra packages suitable for a desktop environment...

GRAPHICS
Packages: $GRAPHICS

BROWSER
Packages: $BROWSER

VIDEO
Packages: $VIDEO

VIEWERS
Packages: $VIEWERS

EXTRAS
Packages: $EXTRAS

_EOF_

read -n 1 -p "Do you want to install these extra applications? [Yn] > "

if [[ $REPLY == [yY] || $REPLY == "" ]]
then
    printf "\nOK. Installing extras...\n"
    sleep 2
    apt-get install -y $GRAPHICS $BROWSER $VIDEO $VIEWERS $EXTRAS
    break
elif [[ $REPLY == [nN] ]]
then
    printf "\nOK. Skipping over applications...\n"
    sleep 2
    break
else
    invalid_reply_yn
fi  
done
}

au_revoir() {
clear
printf "$( penguinista ) .: All done!\n"
}

#: START
run_options "$@"
long_description
confirm_start
test_condition

#: APT
apt_source
pkg_console
pkg_desktop

#: FINISH
au_revoir
